name: Build and Publish Laila.Shell SampleApp2

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET Framework
        uses: microsoft/setup-msbuild@v2

      - name: Extract Version from vbproj
        id: extract_version
        shell: pwsh
        run: |
          [xml]$vbproj = Get-Content "Laila.Shell/Laila.Shell.vbproj"
          $versionNode = $vbproj.Project.PropertyGroup | Where-Object { $_.Version -and -not [string]::IsNullOrWhiteSpace($_.Version) } | Select-Object -First 1
          if ($versionNode -and $versionNode.Version) {
            $versionNumber = $versionNode.Version.Trim()
          } else {
            $versionNumber = "1.0.0"
            Write-Host "Version not found, defaulting to $versionNumber"
          }
          $isPrerelease = $versionNumber -match "alpha"
          Write-Output "version=$versionNumber" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          Write-Output "prerelease=$isPrerelease" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Restore NuGet Packages
        run: nuget restore Laila.Shell.sln

      - name: Explicitly build WinRT dependency
        run: |
          msbuild Laila.Shell.WinRT/Laila.Shell.WinRT.csproj /p:Configuration=Release /p:Platform="x64" /m

      - name: Build Solution
        run: |
          msbuild Laila.Shell.sln /p:Configuration=Release /p:Platform="x64" /m

      - name: Package SampleApp2
        run: |
          $outputDir = "./Laila.Shell.SampleApp/bin/x64/Release/net6.0-windows7.0"
          $zipFile = "Laila.Shell.SampleApp2-v${{ steps.extract_version.outputs.version }}.zip"
          Compress-Archive -Path "$outputDir/*" -DestinationPath "$zipFile"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Laila.Shell.SampleApp2-v${{ steps.extract_version.outputs.version }}
          path: ./Laila.Shell.SampleApp/bin/x64/Release/net6.0-windows7.0/*

      - name: Create and Push Tag
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config user.name "lailablomme"
          git config user.email "lailablomme@users.noreply.github.com"
          git remote set-url origin "https://$env:GITHUB_TOKEN@github.com/$env:GITHUB_REPOSITORY.git"
          git tag "v${{ steps.extract_version.outputs.version }}" -f
          git push origin "v${{ steps.extract_version.outputs.version }}" -f

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          name: Release v${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: ${{ steps.extract_version.outputs.prerelease }}
          files: Laila.Shell.SampleApp2-v${{ steps.extract_version.outputs.version }}.zip