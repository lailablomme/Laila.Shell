<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Laila.Shell.Controls">

    <SolidColorBrush x:Key="Menu.BorderBrush" Color="#999999"/>
    <SolidColorBrush x:Key="Menu.Background" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="Menu.Foreground" Color="Black"/>
    <SolidColorBrush x:Key="MenuItem.Highlighted.BorderBrush" Color="#26A0DA"/>
    <SolidColorBrush x:Key="MenuItem.Highlighted.Background" Color="#C0DDEB"/>
    <SolidColorBrush x:Key="MenuItem.Highlighted.Foreground" Color="Black"/>
    <SolidColorBrush x:Key="MenuItem.Disabled.Foreground" Color="Gray"/>
    
    <Style TargetType="{x:Type controls:ItemsContextMenu}">
        <Style.Resources>
            <Style TargetType="ContextMenu">
                <Style.Resources>
                    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                        <Setter Property="Height" Value="1" />
                        <Setter Property="Margin" Value="0,2,0,2" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Separator}">
                                    <Border BorderBrush="{Binding Colors.MenuItemSeparator, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" BorderThickness="0,1,0,0" Margin="-2,0,-2,0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Style.Resources>
                            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                <Grid SnapsToDevicePixels="true" UseLayoutRounding="True">
                                    <Border x:Name="Bg" BorderThickness="1" Background="Transparent" CornerRadius="2" />
                                    <Grid Height="22">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="21" x:Name="IconCol" />
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                            <ColumnDefinition Width="17"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="GlyphPanel" Height="20" Visibility="Collapsed" Width="21">
                                            <Image x:Name="Glyph" Width="16" Height="16" Source="pack://application:,,,/Laila.Shell;component/Images/check16.png" />
                                        </Border>
                                        <ContentPresenter Grid.Column="1" x:Name="Icon" MaxHeight="16" MaxWidth="16" ContentSource="Icon" Margin="4,1,1,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                        <ContentPresenter Grid.Column="2" ContentSource="Header" VerticalAlignment="Center" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                      TextBlock.Foreground="{Binding Colors.MenuItemForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <TextBlock x:Name="igText" Grid.Column="3" Margin="37,0,0,0" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}"
                                                               Foreground="{Binding Colors.MenuItemInputGestureTextForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Icon" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                        <Setter Property="Width" TargetName="IconCol" Value="0"/>
                                    </Trigger>
                                    <Trigger Property="InputGestureText" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="igText" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="IsCheckable" Value="true">
                                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsCheckable" Value="False">
                                        <Setter Property="Width" TargetName="IconCol" Value="21"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter Property="Foreground" Value="{Binding Colors.MenuItemSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="Background" TargetName="Bg" Value="{Binding Colors.MenuItemSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="BorderBrush" TargetName="Bg" Value="{Binding Colors.MenuItemSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{Binding Colors.MenuItemDisabledForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="Opacity" TargetName="Glyph" Value="0.30"/>
                                        <Setter Property="Opacity" TargetName="Icon" Value="0.30"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Foreground" Value="{Binding Colors.MenuItemSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="Background" TargetName="Bg" Value="{Binding Colors.MenuItemSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="BorderBrush" TargetName="Bg" Value="{Binding Colors.MenuItemSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
                                <Border Padding="0,3,0,3" x:Name="PART_Menu" Opacity="0"  BorderThickness="1" CornerRadius="5"
                                                    BorderBrush="{Binding Colors.MenuBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"
                                                    Background="{Binding Colors.MenuBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" Margin="0,0,6,6">
                                    <Border.Triggers>
                                        <EventTrigger RoutedEvent="Rectangle.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Menu" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Border.Triggers>
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="3" Color="Black" ShadowDepth="3" Opacity="0.5" />
                                    </Border.Effect>
                                    <ScrollViewer x:Name="PART_ScrollViewer" UseLayoutRounding="True" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                        <ContentPresenter />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                            <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7</Geometry>
                            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                <Grid SnapsToDevicePixels="true" UseLayoutRounding="True">
                                    <Border x:Name="Bg" BorderThickness="1" Background="Transparent" CornerRadius="2" />
                                    <Grid Height="22">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="21" x:Name="IconCol" />
                                            <ColumnDefinition Width="4"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="37"/>
                                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                            <ColumnDefinition Width="17"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="GlyphPanel" Height="20" Visibility="Collapsed" Width="21">
                                            <Image x:Name="Glyph" Width="16" Height="16" Source="pack://application:,,,/Laila.Shell;component/Images/check16.png" />
                                        </Border>
                                        <ContentPresenter Grid.Column="1" x:Name="Icon" Height="16" Width="16" ContentSource="Icon" Margin="4,1,1,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                        <ContentPresenter Grid.Column="3" ContentSource="Header" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                      TextBlock.Foreground="{Binding Colors.MenuItemForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <TextBlock Grid.Column="5" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Visibility="Collapsed"
                                                               Foreground="{Binding Colors.MenuItemInputGestureTextForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Path Grid.Column="6" Data="{StaticResource RightArrow}" Margin="4,0,0,0" VerticalAlignment="Center"
                                                          Stroke="{Binding Colors.MenuItemForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" />
                                    </Grid>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                                        <ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <ScrollViewer x:Name="PART_ScrollViewer" SnapsToDevicePixels="true" UseLayoutRounding="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                                <Grid>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Popup>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Icon" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                        <Setter Property="Width" TargetName="IconCol" Value="0"/>
                                    </Trigger>
                                    <Trigger Property="IsCheckable" Value="true">
                                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsCheckable" Value="False">
                                        <Setter Property="Width" TargetName="IconCol" Value="21"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter Property="Foreground" Value="{Binding Colors.MenuItemSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="Background" TargetName="Bg" Value="{Binding Colors.MenuItemSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="BorderBrush" TargetName="Bg" Value="{Binding Colors.MenuItemSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="Foreground" Value="{Binding Colors.MenuItemSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="Background" TargetName="Bg" Value="{Binding Colors.MenuItemSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="BorderBrush" TargetName="Bg" Value="{Binding Colors.MenuItemSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{Binding Colors.MenuItemDisabledForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="Opacity" TargetName="GlyphPanel" Value="0.30"/>
                                        <Setter Property="Opacity" TargetName="Icon" Value="0.30"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Style.Resources>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="4,0,4,0"/>
                    </Style>
                    <Style TargetType="Button" x:Key="lailaShell_ContextMenuButtonStyle">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{Binding Colors.MenuButtonForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0,0,3,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" Padding="{TemplateBinding Padding}" CornerRadius="2"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{Binding Colors.MenuButtonSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                            <Setter TargetName="border" Property="Background" Value="{Binding Colors.MenuButtonSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Colors.MenuButtonSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="ToggleButton" x:Key="lailaShell_ContextMenuToggleButtonStyle">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{Binding Colors.MenuButtonForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0,0,3,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="border" Padding="{TemplateBinding Padding}" CornerRadius="2"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{Binding Colors.MenuButtonSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                            <Setter TargetName="border" Property="Background" Value="{Binding Colors.MenuButtonSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Colors.MenuButtonSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Foreground" Value="{Binding Colors.MenuButtonSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                            <Setter TargetName="border" Property="Background" Value="{Binding Colors.MenuButtonSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Colors.MenuButtonSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Style.Resources>
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border Padding="0,3,0,3" Margin="0,0,6,6" x:Name="PART_Menu" Opacity="0" BorderThickness="1" CornerRadius="5" 
                                                BorderBrush="{Binding Colors.MenuBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" 
                                                Background="{Binding Colors.MenuBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" 
                                                UseLayoutRounding="True" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="3" Color="Black" ShadowDepth="3" Opacity="0.5" />
                                </Border.Effect>
                                <ScrollViewer x:Name="PART_ScrollViewer" RenderOptions.ClearTypeHint="Enabled"
                                                            HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter Margin="0,0,0,1" x:Name="PART_ItemsPresenter" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Visibility" Value="Visible">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Menu" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ItemsContextMenu}">
                    <Border Padding="3" x:Name="PART_Menu" Opacity="0" BorderThickness="1" CornerRadius="5" 
                            Background="{Binding Colors.MenuBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"  
                            BorderBrush="{Binding Colors.MenuBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"
                            Margin="0,0,6,6" UseLayoutRounding="True" SnapsToDevicePixels="True"
                            Tag="{Binding ., RelativeSource={RelativeSource AncestorType={x:Type controls:ItemsContextMenu}}}">
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Rectangle.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Menu" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="3" Color="Black" ShadowDepth="3" Opacity="0.5" />
                        </Border.Effect>
                        <Grid>
                            <ListBox x:Name="PART_ListBox" SelectionMode="Single" Background="Transparent"
                                     ItemsSource="{TemplateBinding ItemsSource}"
                                     FocusVisualStyle="{x:Null}" ScrollViewer.IsDeferredScrollingEnabled="False" 
                                     ScrollViewer.CanContentScroll="True" BorderThickness="0" Width="255"
                                     Grid.IsSharedSizeScope="True" VirtualizingPanel.ScrollUnit="Pixel" 
                                     VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                     VirtualizingPanel.VirtualizationMode="Standard" VirtualizingPanel.CacheLength="1" 
                                     VirtualizingPanel.CacheLengthUnit="Item">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="Foreground" Value="{Binding Colors.MenuItemForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                                    Height="22" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" UseLayoutRounding="True" CornerRadius="2">
                                                        <ContentPresenter Margin="4,0,4,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="Center" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="{Binding Colors.MenuItemSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                                            <Setter Property="Background" TargetName="Bd" Value="{Binding Colors.MenuItemSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Colors.MenuItemSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                                        </Trigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" Value="False"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Foreground" Value="{Binding Colors.MenuItemSelectedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                                            <Setter Property="Background" TargetName="Bd" Value="{Binding Colors.MenuItemSelectedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Colors.MenuItemSelectedBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Colors.MenuItemDisabledForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid ToolTip="{Binding DisplayName}">
                                            <Grid.ColumnDefinitions >
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="4" />
                                                <ColumnDefinition Width="200" />
                                            </Grid.ColumnDefinitions>
                                            <Image Grid.Column="0" Source="{Binding IconAsync[16], IsAsync=True}" Width="16" Height="16" 
                                               UseLayoutRounding="True" SnapsToDevicePixels="True">
                                                <Image.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                                                <Setter Property="Image.Opacity" Value="0.5" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsCut}" Value="True">
                                                                <Setter Property="Image.Opacity" Value="0.5" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <Image Grid.Column="0" Source="{Binding OverlayImageAsync[16], IsAsync=True}" Width="16" Height="16" 
                                               UseLayoutRounding="True" SnapsToDevicePixels="True"
                                               VerticalAlignment="Bottom" HorizontalAlignment="Left">
                                                <Image.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                                                <Setter Property="Image.Opacity" Value="0.5" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsCut}" Value="True">
                                                                <Setter Property="Image.Opacity" Value="0.5" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <TextBlock Grid.Column="2" Width="200" 
                                                   Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis">
                                                <TextBlock.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Tag.DoShowEncryptedOrCompressedFilesInColor, ElementName=PART_Menu}" Value="True" />
                                                                    <Condition Binding="{Binding IsCompressed}" Value="True" />
                                                                </MultiDataTrigger.Conditions>
                                                                <MultiDataTrigger.Setters>
                                                                    <Setter Property="TextBlock.Foreground" Value="Blue" />
                                                                </MultiDataTrigger.Setters>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Tag.DoShowEncryptedOrCompressedFilesInColor, ElementName=PART_Menu}" Value="True" />
                                                                    <Condition Binding="{Binding IsEncrypted}" Value="True" />
                                                                </MultiDataTrigger.Conditions>
                                                                <MultiDataTrigger.Setters>
                                                                    <Setter Property="TextBlock.Foreground" Value="#269D27" />
                                                                </MultiDataTrigger.Setters>
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.Style>
                                    <Style>
                                        <Setter Property="ListBox.Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="0">
                                                <Setter Property="ListBox.Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.Style>
                                <ListBox.Resources>
                                    <Style TargetType="ToolTip">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="HasDropShadow" Value="True"/>
                                        <Setter Property="HasDropShadow" Value="True"/>
                                        <Setter Property="Foreground" Value="{Binding Colors.ToolTipForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" />
                                        <Setter Property="Background" Value="{Binding Colors.ToolTipBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" />
                                        <Setter Property="BorderBrush" Value="{Binding Colors.ToolTipBorder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:ItemsContextMenu}}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToolTip">
                                                    <Border 
                                                        Name="Border"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="4"
                                                        Padding="4"
                                                        SnapsToDevicePixels="True">
                                                        <ContentPresenter 
                                                            Margin="0"
                                                            RecognizesAccessKey="True" 
                                                            VerticalAlignment="Center" 
                                                            HorizontalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.Resources>
                            </ListBox>
                            <StackPanel Orientation="Horizontal" x:Name="PART_Loader" Width="255">
                                <Viewbox Grid.Column="1" StretchDirection="Both" 
                                     Stretch="Uniform" Width="16" Height="16">
                                    <controls:LoadingSpinner />
                                </Viewbox>
                                <TextBlock Margin="4,0,0,0" VerticalAlignment="Center">Loading...</TextBlock>
                                <StackPanel.Style>
                                    <Style>
                                        <Setter Property="StackPanel.Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="0">
                                                <Setter Property="StackPanel.Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
