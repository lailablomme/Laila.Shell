<Application x:Class="Application"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Laila.Shell.SampleApp"
             xmlns:controls="clr-namespace:Laila.Shell.Controls;assembly=Laila.Shell"
             xmlns:metroWindowConverters="clr-namespace:Laila.MetroWindow.Converters;assembly=Laila.MetroWindow"
             xmlns:localConverters="clr-namespace:Laila.Shell.SampleApp.Converters"
             StartupUri="MainWindow.xaml" DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <Style TargetType="ToggleButton" x:Key="lailaShell_TreeChevronButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Image Source="pack://application:,,,/Laila.Shell;component/Images/chevron16.png" Width="16" Height="16" x:Name="chevronImage"
                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Image.RenderTransform>
                            </Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding HasSubFolders}" Value="False">
                                <Setter Property="ToggleButton.Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasSubFolders}" Value="{x:Null}">
                                <Setter Property="ToggleButton.Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                <Setter Property="ToggleButton.Visibility" Value="Visible" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="chevronImage" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="lailaShell_ContextMenuButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="innerBorder" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C0DDEB"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#26A0DA"/>
                                <Setter TargetName="innerBorder" Property="BorderBrush" Value="#A3D1E8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="lailaShell_ContextMenuToggleButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="innerBorder" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C0DDEB"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#26A0DA"/>
                                <Setter TargetName="innerBorder" Property="BorderBrush" Value="#A3D1E8"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C0DDEB"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#26A0DA"/>
                                <Setter TargetName="innerBorder" Property="BorderBrush" Value="#A3D1E8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="lailaShell_NavigationButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#eeeeee"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="lailaShell_NavigationChevronButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <Image Source="pack://application:,,,/Laila.Shell;component/Images/chevron16.png" Width="16" Height="16" x:Name="chevronImage"
                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Image.RenderTransform>
                            </Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#eeeeee"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#eeeeee"/>
                                <Setter TargetName="chevronImage" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="lailaShell_NavigationMoreButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <Image Source="pack://application:,,,/Laila.Shell;component/Images/3dots16.png" Width="16" Height="16" x:Name="moreImage"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#eeeeee"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#eeeeee"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="PART_Grid" UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,2,-10,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="5" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" 
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" 
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path Grid.Column="0" x:Name="PathLeft" Data="M 5,27 C 5,28 4,32 0,32 L 5,32" Fill="Transparent" Stroke="Transparent" Width="5" Height="32" />
                            <Border Grid.Column="1" Grid.ColumnSpan="2" x:Name="Border" Background="Transparent" Margin="0,0,0,0" BorderThickness="0" CornerRadius="5,5,0,0">
                            </Border>
                            <ContentPresenter Grid.Column="1" x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                              ContentSource="Header" Margin="6" RecognizesAccessKey="True" />
                            <controls:TabItemCloseButton Grid.Column="2" Margin="0,0,5,0">x</controls:TabItemCloseButton>
                            <Path Grid.Column="3" x:Name="PathRight" Data="M 0,27 C 0,28 1,32 5,32 L 0,32" Fill="Transparent" Stroke="Transparent" Width="5" Height="32" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="controls:TabItemCloseButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width"  Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:TabItemCloseButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <TextBlock FontFamily="Wingdings 2" FontSize="14" Margin="0,2,0,0" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center">Î</TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#22000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="metroWindowButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Marlett" />
            <Setter Property="Width" Value="35" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" Background="Transparent">
                            <Border x:Name="bd2" Background="Transparent">
                                <TextBlock Style="{DynamicResource metroWindowTitleTextStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="tb"
                                        FontFamily="Marlett" FontSize="14">
                                <ContentPresenter />
                                </TextBlock>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False">
                                <Setter TargetName="tb" Property="Style" Value="{DynamicResource metroWindowInactiveTitleTextStyle}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#11000000" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DoIntegrateMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="bd" Property="Background" Value="{DynamicResource metroWindowBorderBrush}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DoIntegrateMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="bd" Property="Background" Value="{DynamicResource metroWindowBorderBrush}" />
                                <Setter TargetName="bd2" Property="Background" Value="#33000000" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="metroWindowCloseButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Marlett" />
            <Setter Property="Width" Value="35" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" Background="Transparent">
                            <TextBlock Style="{DynamicResource metroWindowTitleTextStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="tb"
                                    FontFamily="Marlett" FontSize="14">
                            <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False">
                                <Setter TargetName="tb" Property="Style" Value="{DynamicResource metroWindowInactiveTitleTextStyle}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#77FF0000" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="Red" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="Background" Value="#ececec" />
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="GlowColor" Value="Gray" />
            <Setter Property="GlowSize" Value="15" />
            <Setter Property="GlowStyle" Value="Glowing" />
            <Setter Property="WindowChrome.CaptionHeight"  Value="30" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:MainWindow}">
                        <ControlTemplate.Resources>
                            <metroWindowConverters:GlowMarginConverter x:Key="glowMarginConverter" />
                            <metroWindowConverters:BorderSizeConverter x:Key="borderSizeConverter" />
                        </ControlTemplate.Resources>
                        <Grid x:Name="PART_RootGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="col0" Width="{Binding Path=GlowSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource glowMarginConverter}}" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="col2" Width="{Binding Path=GlowSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource glowMarginConverter}}" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="row0"  Height="{Binding Path=GlowSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource glowMarginConverter}}" />
                                <RowDefinition Height="*" />
                                <RowDefinition x:Name="row2" Height="{Binding Path=GlowSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource glowMarginConverter}}" />
                            </Grid.RowDefinitions>

                            <Border Grid.Row="1" Grid.Column="1" x:Name="PART_MainBorder" CornerRadius="10"  
                                    Background="{TemplateBinding Background}" BorderBrush="DarkViolet" BorderThickness="1">
                                <Border CornerRadius="10" ClipToBounds="True" x:Name="PART_ClippingBorder">
                                    <Border.Resources>
                                        <localConverters:RectConverter x:Key="rectConverter" />
                                    </Border.Resources>
                                    <Border.Clip>
                                        <RectangleGeometry RadiusX="10" RadiusY="10">
                                            <RectangleGeometry.Rect>
                                                <MultiBinding Converter="{StaticResource rectConverter}">
                                                    <Binding ElementName="PART_ClippingBorder" Path="ActualWidth" />
                                                    <Binding ElementName="PART_ClippingBorder" Path="ActualHeight" />
                                                </MultiBinding>
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </Border.Clip>
                                    <Grid x:Name="PART_MainGrid" Margin="0">
                                        <Grid.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="MediumOrchid" Offset="0.0" />
                                                        <GradientStop Color="Violet" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Grid.Background>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <ContentPresenter Grid.Row="0" Grid.RowSpan="2" WindowChrome.IsHitTestVisibleInChrome="True" Margin="0,7,0,0"
                                          Content="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                                        <ContentControl x:Name="PART_TitleBar" HorizontalAlignment="Right">
                                            <Grid Grid.Row="0" x:Name="PART_TitleBarGrid" VerticalAlignment="Center"
                                              Background="{x:Null}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <StackPanel Grid.Column="1" Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True">
                                                    <Button Style="{DynamicResource metroWindowButtonStyle}" 
                                                x:Name="PART_MinimizeButton">0</Button>
                                                    <Button Style="{DynamicResource metroWindowButtonStyle}" 
                                                x:Name="PART_MaximizeRestoreButton">1</Button>
                                                    <Button Style="{DynamicResource metroWindowCloseButtonStyle}" 
                                                x:Name="PART_CloseButton">r</Button>
                                                </StackPanel>
                                            </Grid>
                                        </ContentControl>
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="GlowStyle" Value="Glowing">
                                <Setter Property="Effect" TargetName="PART_MainBorder">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="{Binding Path=GlowSize, RelativeSource={RelativeSource TemplatedParent}}" ShadowDepth="0" Color="{Binding Path=GlowColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="GlowStyle" Value="Shadow">
                                <Setter Property="Width" TargetName="col0" Value="0" />
                                <Setter Property="Height" TargetName="row0" Value="0" />
                                <Setter Property="Effect" TargetName="PART_MainBorder">
                                    <Setter.Value>
                                        <DropShadowEffect Opacity="0.5" BlurRadius="{Binding Path=GlowSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource borderSizeConverter}}" ShadowDepth="{TemplateBinding GlowSize}" Color="{Binding Path=GlowColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="GlowStyle" Value="None">
                                <Setter Property="Effect" TargetName="PART_MainBorder" Value="{x:Null}" />
                                <Setter Property="Width" TargetName="col0" Value="0" />
                                <Setter Property="Width" TargetName="col2" Value="0" />
                                <Setter Property="Height" TargetName="row0" Value="0" />
                                <Setter Property="Height" TargetName="row2" Value="0" />
                            </Trigger>
                            <Trigger Property="WindowState" Value="Maximized">
                                <Setter Property="Effect" TargetName="PART_MainBorder" Value="{x:Null}" />
                                <Setter Property="Width" TargetName="col0" Value="0" />
                                <Setter Property="Width" TargetName="col2" Value="0" />
                                <Setter Property="Height" TargetName="row0" Value="0" />
                                <Setter Property="Height" TargetName="row2" Value="0" />
                            </Trigger>
                            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource Mode=Self}}" Value="NoResize">
                                <Setter Property="Visibility" TargetName="PART_MinimizeButton" Value="Collapsed" />
                                <Setter Property="Visibility" TargetName="PART_MaximizeRestoreButton" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource Mode=Self}}" Value="CanMinimize">
                                <Setter Property="Visibility" TargetName="PART_MaximizeRestoreButton" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                                <Setter Property="BorderBrush" TargetName="PART_MainBorder" Value="Gray" />
                                <Setter Property="GlowColor" Value="Gray" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DoIntegrateMenu, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter Property="Background" TargetName="PART_TitleBarGrid" Value="Transparent" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DoShowChrome, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                                <Setter Property="Visibility" TargetName="PART_TitleBar" Value="Collapsed" />
                                <Setter Property="BorderThickness" TargetName="PART_MainBorder" Value="0" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
