<Application x:Class="Application"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Laila.Shell.SampleApp"
             xmlns:controls="clr-namespace:Laila.Shell.Controls;assembly=Laila.Shell"
             xmlns:metroWindowConverters="clr-namespace:Laila.MetroWindow.Converters;assembly=Laila.MetroWindow"
             xmlns:localConverters="clr-namespace:Laila.Shell.SampleApp.Converters"
             StartupUri="MainWindow.xaml" DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <Style TargetType="ToggleButton" x:Key="lailaShell_TreeChevronButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Image Source="pack://application:,,,/Laila.Shell;component/Images/chevron16.png" Width="16" Height="16" x:Name="chevronImage"
                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Image.RenderTransform>
                            </Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                <Setter Property="ToggleButton.Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasSubFolders}" Value="False">
                                <Setter Property="ToggleButton.Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasSubFolders}" Value="{x:Null}">
                                <Setter Property="ToggleButton.Visibility" Value="Hidden" />
                            </DataTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="chevronImage" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="lailaShell_ContextMenuButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="innerBorder" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C0DDEB"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#26A0DA"/>
                                <Setter TargetName="innerBorder" Property="BorderBrush" Value="#A3D1E8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="lailaShell_ContextMenuToggleButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="innerBorder" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C0DDEB"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#26A0DA"/>
                                <Setter TargetName="innerBorder" Property="BorderBrush" Value="#A3D1E8"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C0DDEB"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#26A0DA"/>
                                <Setter TargetName="innerBorder" Property="BorderBrush" Value="#A3D1E8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="lailaShell_AddressBarButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="contentPresenter" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#11000000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="lailaShell_AddressBarChevronButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0,0,1,0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <Image Source="pack://application:,,,/Laila.Shell;component/Images/chevron16.png" Width="16" Height="16" x:Name="chevronImage"
                                   VerticalAlignment="Center" HorizontalAlignment="Center"
                                   RenderTransformOrigin="0.5,0.5" Margin="2,0,-2,0">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Image.RenderTransform>
                            </Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#11000000"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#11000000"/>
                                <Setter TargetName="chevronImage" Property="Opacity" Value="0.5"/>
                                <Setter TargetName="chevronImage" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="chevronImage" Property="Margin" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="lailaShell_AddressBarMoreButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <Image Source="pack://application:,,,/Laila.Shell;component/Images/3dots16.png" Width="16" Height="16" x:Name="moreImage"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#11000000"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="moreImage" Property="Opacity" Value="0.5"/>
                                <Setter TargetName="border" Property="Background" Value="#11000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="lailaShell_ToolbarButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#22000000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#44000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="lailaShell_ToolbarToggleButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#22000000"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#44000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="lailaShell_GroupByExpanderToggleButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="20" Height="20" Background="Transparent">
                            <Image Width="9" Height="5" Margin="4,0,0,0" x:Name="Arrow"
                                   Source="pack://application:,,,/Laila.Shell;component/Images/dropdown_arrow.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="Arrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Arrow" Property="Margin" Value="8,13,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Expander" x:Key="lailaShell_GroupByExpanderStyle">
            <Setter Property="Margin" Value="0,0,-5,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel>
                                <DockPanel>
                                    <ToggleButton DockPanel.Dock="Left" Margin="12,0,0,0" 
                                              Style="{StaticResource lailaShell_GroupByExpanderToggleButtonStyle}" 
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentPresenter ContentSource="Header" VerticalAlignment="Center"/>
                                </DockPanel>
                                <ContentPresenter x:Name="ExpanderContent" Visibility="Collapsed" ContentSource="Content" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="PART_Grid" UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,2,-10,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="5" />
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" 
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" 
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path Grid.Column="0" x:Name="PathLeft" Data="M 5,27 C 5,28 4,32 0,32 L 5,32" Fill="Transparent" Stroke="Transparent" Width="5" Height="32" />
                            <Border Grid.Column="1" Grid.ColumnSpan="2" x:Name="Border" Background="Transparent" Margin="0,0,0,0" BorderThickness="0" CornerRadius="8,8,0,0">
                            </Border>
                            <ContentPresenter Grid.Column="1" x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                              ContentSource="Header" Margin="6" RecognizesAccessKey="True" />
                            <controls:TabItemCloseButton Grid.Column="2" Margin="0,0,5,0">x</controls:TabItemCloseButton>
                            <Path Grid.Column="3" x:Name="PathRight" Data="M 0,27 C 0,28 1,32 5,32 L 0,32" Fill="Transparent" Stroke="Transparent" Width="5" Height="32" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="controls:TabItemCloseButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width"  Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:TabItemCloseButton">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <TextBlock FontFamily="Wingdings 2" FontSize="14" Margin="0,2,0,0" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center">Î</TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#22000000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#44000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="metroWindowButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Marlett" />
            <Setter Property="Width" Value="35" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" Background="Transparent">
                            <Border x:Name="bd2" Background="Transparent">
                                <TextBlock Style="{DynamicResource metroWindowTitleTextStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="tb"
                                        FontFamily="Marlett" FontSize="14">
                                <ContentPresenter />
                                </TextBlock>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False">
                                <Setter TargetName="tb" Property="Style" Value="{DynamicResource metroWindowInactiveTitleTextStyle}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#11000000" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DoIntegrateMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="bd" Property="Background" Value="{DynamicResource metroWindowBorderBrush}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DoIntegrateMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="bd" Property="Background" Value="{DynamicResource metroWindowBorderBrush}" />
                                <Setter TargetName="bd2" Property="Background" Value="#33000000" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="metroWindowCloseButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Marlett" />
            <Setter Property="Width" Value="35" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" Background="Transparent">
                            <TextBlock Style="{DynamicResource metroWindowTitleTextStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="tb"
                                    FontFamily="Marlett" FontSize="14">
                            <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False">
                                <Setter TargetName="tb" Property="Style" Value="{DynamicResource metroWindowInactiveTitleTextStyle}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#77FF0000" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="Red" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="Background" Value="#44000000" />
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="GlowColor" Value="Gray" />
            <Setter Property="GlowSize" Value="15" />
            <Setter Property="GlowStyle" Value="Glowing" />
            <Setter Property="WindowChrome.CaptionHeight"  Value="30" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:MainWindow}">
                        <ControlTemplate.Resources>
                            <metroWindowConverters:ShadowMarginConverter x:Key="shadowMarginConverter" />
                            <metroWindowConverters:GlowMarginConverter x:Key="glowMarginConverter" />
                            <metroWindowConverters:BorderSizeConverter x:Key="borderSizeConverter" />
                        </ControlTemplate.Resources>
                        <Border x:Name="PART_RootBorder" Padding="{Binding Path=GlowSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource glowMarginConverter}}">
                            <Border Grid.Row="1" Grid.Column="1" x:Name="PART_MainBorder" CornerRadius="10"  
                                    Background="{TemplateBinding Background}" BorderBrush="DarkViolet" BorderThickness="1">
                                <Border CornerRadius="10" ClipToBounds="True" x:Name="PART_ClippingBorder">
                                    <Border.Resources>
                                        <localConverters:RectConverter x:Key="rectConverter" />
                                    </Border.Resources>
                                    <Border.Clip>
                                        <RectangleGeometry RadiusX="10" RadiusY="10">
                                            <RectangleGeometry.Rect>
                                                <MultiBinding Converter="{StaticResource rectConverter}">
                                                    <Binding ElementName="PART_ClippingBorder" Path="ActualWidth" />
                                                    <Binding ElementName="PART_ClippingBorder" Path="ActualHeight" />
                                                </MultiBinding>
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </Border.Clip>
                                    <Grid x:Name="PART_MainGrid" Margin="0">
                                        <Grid.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="MediumOrchid" Offset="0.0" />
                                                        <GradientStop Color="Violet" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Grid.Background>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <ContentPresenter Grid.Row="0" Grid.RowSpan="2" WindowChrome.IsHitTestVisibleInChrome="True" Margin="0,7,0,0"
                                          Content="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                                        <ContentControl x:Name="PART_TitleBar" HorizontalAlignment="Right">
                                            <Grid Grid.Row="0" x:Name="PART_TitleBarGrid" VerticalAlignment="Center"
                                              Background="{x:Null}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <StackPanel Grid.Column="1" Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True">
                                                    <Button Style="{DynamicResource metroWindowButtonStyle}" 
                                                        x:Name="PART_MinimizeButton">0</Button>
                                                    <Button Style="{DynamicResource metroWindowButtonStyle}" 
                                                        x:Name="PART_MaximizeRestoreButton">1</Button>
                                                    <Button Style="{DynamicResource metroWindowCloseButtonStyle}" 
                                                        x:Name="PART_CloseButton">r</Button>
                                                </StackPanel>
                                            </Grid>
                                        </ContentControl>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="GlowStyle" Value="Glowing">
                                <Setter Property="Effect" TargetName="PART_MainBorder">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="{Binding Path=GlowSize, 
                                            RelativeSource={RelativeSource Mode=TemplatedParent}, FallbackValue=15}" 
                                                          ShadowDepth="0" Color="{Binding Path=GlowColor, 
                                            RelativeSource={RelativeSource Mode=TemplatedParent}, FallbackValue=Gray}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="GlowStyle" Value="Shadow">
                                <Setter Property="Padding" TargetName="PART_RootBorder" Value="{Binding Path=GlowSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource shadowMarginConverter}}" />
                                <Setter Property="Effect" TargetName="PART_MainBorder">
                                    <Setter.Value>
                                        <DropShadowEffect Opacity="0.5" BlurRadius="{Binding Path=GlowSize, 
                                            RelativeSource={RelativeSource TemplatedParent}, 
                                            Converter={StaticResource borderSizeConverter}, FallbackValue=15}" 
                                                          ShadowDepth="{TemplateBinding GlowSize}" 
                                                          Color="{Binding Path=GlowColor, 
                                            RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Gray}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="GlowStyle" Value="None">
                                <Setter Property="Effect" TargetName="PART_MainBorder" Value="{x:Null}" />
                                <Setter Property="Padding" TargetName="PART_RootBorder" Value="0" />
                            </Trigger>
                            <Trigger Property="ActualWindowState" Value="Maximized">
                                <Setter Property="CornerRadius" TargetName="PART_MainBorder" Value="0" />
                                <Setter Property="CornerRadius" TargetName="PART_ClippingBorder" Value="0" />
                                <Setter Property="Clip" TargetName="PART_ClippingBorder" Value="{x:Null}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource Mode=Self}}" Value="NoResize">
                                <Setter Property="Visibility" TargetName="PART_MinimizeButton" Value="Collapsed" />
                                <Setter Property="Visibility" TargetName="PART_MaximizeRestoreButton" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource Mode=Self}}" Value="CanMinimize">
                                <Setter Property="Visibility" TargetName="PART_MaximizeRestoreButton" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                                <Setter Property="BorderBrush" TargetName="PART_MainBorder" Value="Gray" />
                                <Setter Property="GlowColor" Value="Gray" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DoIntegrateMenu, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter Property="Background" TargetName="PART_TitleBarGrid" Value="Transparent" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DoShowChrome, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                                <Setter Property="Visibility" TargetName="PART_TitleBar" Value="Collapsed" />
                                <Setter Property="BorderThickness" TargetName="PART_MainBorder" Value="0" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Menu.BorderBrush" Color="#999999"/>
        <SolidColorBrush x:Key="Menu.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="Menu.Foreground" Color="Black"/>
        <SolidColorBrush x:Key="MenuItem.Highlighted.BorderBrush" Color="#26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlighted.Background" Color="#C0DDEB"/>
        <SolidColorBrush x:Key="MenuItem.Highlighted.Foreground" Color="Black"/>
        <SolidColorBrush x:Key="MenuItem.Disabled.Foreground" Color="Gray"/>
        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
            <Setter Property="Margin" Value="-10,0,0,0" />
        </Style>
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Menu.Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="true">
                <Border x:Name="Bg" BorderThickness="1" Background="Transparent" />
                <Grid Height="22">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="MenuItemCheckColumnGroup" Width="Auto"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="GlyphPanel" Height="20" Margin="1" Visibility="Collapsed" Width="22">
                        <Image x:Name="Glyph" Width="16" Height="16" Source="pack://application:,,,/Laila.Shell;component/Images/check16.png" />
                    </Border>
                    <ContentPresenter Grid.Column="1" x:Name="Icon" Height="16" Width="16" ContentSource="Icon" Margin="4,1,1,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <ContentPresenter Grid.Column="3" ContentSource="Header" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="5" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlighted.Foreground}"/>
                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.BorderBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Disabled.Foreground}"/>
                    <Setter Property="Opacity" TargetName="Glyph" Value="0.30"/>
                    <Setter Property="Opacity" TargetName="Icon" Value="0.30"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlighted.Foreground}"/>
                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.BorderBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
            <Border Padding="3" x:Name="PART_Menu" Opacity="0" BorderBrush="{StaticResource Menu.BorderBrush}" 
                    BorderThickness="1" Background="{StaticResource Menu.Background}" Margin="0,0,6,6">
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Rectangle.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Menu" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
                <Border.Effect>
                    <DropShadowEffect BlurRadius="3" Color="Black" ShadowDepth="3" Opacity="0.5" />
                </Border.Effect>
                <ScrollViewer x:Name="PART_ScrollViewer" RenderOptions.ClearTypeHint="Enabled"
                              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                    <ContentPresenter />
                </ScrollViewer>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="true">
                <Border x:Name="Bg" Background="{TemplateBinding Background}" BorderThickness="1">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <Image x:Name="GlyphPanel" Width="16" Height="16" Source="pack://application:,,,/Laila.Shell;component/Images/check16.png" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center" />
                        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </StackPanel>
                </Border>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                    <Border>
                        <ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ScrollViewer x:Name="PART_ScrollViewer"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </ContentControl>
                    </Border>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlighted.Foreground}"/>
                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.BorderBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlighted.Foreground}"/>
                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.BorderBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Disabled.Foreground}"/>
                    <Setter Property="Opacity" TargetName="GlyphPanel" Value="0.30"/>
                    <Setter Property="Opacity" TargetName="Icon" Value="0.30"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="true">
                <Border x:Name="Bg" BorderThickness="1" Background="Transparent"/>
                <DockPanel>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <Image x:Name="GlyphPanel" Width="16" Height="16" Source="pack://application:,,,/Laila.Shell;component/Images/check16.png" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center" />
                    <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </DockPanel>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlighted.Foreground}"/>
                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.BorderBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlighted.Foreground}"/>
                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.BorderBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Disabled.Foreground}"/>
                    <Setter Property="Opacity" TargetName="GlyphPanel" Value="0.30"/>
                    <Setter Property="Opacity" TargetName="Icon" Value="0.30"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="true">
                <Border x:Name="Bg" BorderThickness="1" Background="Transparent"/>
                <Grid Height="22">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="MenuItemCheckColumnGroup" Width="Auto"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="GlyphPanel" BorderBrush="#CDD3E6" BorderThickness="1" Background="#E6EFF4" CornerRadius="3" Height="20" Margin="1" Visibility="Collapsed" Width="22">
                        <Image x:Name="Glyph" Width="16" Height="16" Source="pack://application:,,,/Laila.Shell;component/Images/check16.png" />
                    </Border>
                    <ContentPresenter Grid.Column="1" x:Name="Icon" Height="16" Width="16" ContentSource="Icon" Margin="4,1,1,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <ContentPresenter Grid.Column="3" ContentSource="Header" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="5" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Visibility="Collapsed"/>
                    <Path Grid.Column="6" Data="{StaticResource RightArrow}" Fill="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                </Grid>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                    <ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </ContentControl>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlighted.Foreground}"/>
                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.BorderBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Highlighted.Foreground}"/>
                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem.Highlighted.BorderBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource MenuItem.Disabled.Foreground}"/>
                    <Setter Property="Opacity" TargetName="GlyphPanel" Value="0.30"/>
                    <Setter Property="Opacity" TargetName="Icon" Value="0.30"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Padding="3" x:Name="PART_Menu" Opacity="0" BorderBrush="{StaticResource Menu.BorderBrush}" BorderThickness="1" 
                            Background="{StaticResource Menu.Background}" Margin="0,0,6,6" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Menu" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Border.Triggers>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="3" Color="Black" ShadowDepth="3" Opacity="0.5" />
                            </Border.Effect>
                            <ScrollViewer Grid.Row="1" x:Name="PART_ScrollViewer" RenderOptions.ClearTypeHint="Enabled"
                                        HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter Margin="0,0,0,1" x:Name="PART_ItemsPresenter" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
