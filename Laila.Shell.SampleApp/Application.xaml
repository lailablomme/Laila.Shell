<Application x:Class="Application"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Laila.Shell.SampleApp"
             xmlns:controls="clr-namespace:Laila.Shell.Controls;assembly=Laila.Shell"
             StartupUri="MainWindow.xaml" 
             Startup="Application_Startup"
             ShutdownMode="OnLastWindowClose" >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Laila.Shell;component/Themes/Standard.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="metroWindowButtonStyle" TargetType="Button">
                <Setter Property="FontFamily" Value="Marlett" />
                <Setter Property="Width" Value="35" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="bd" Background="Transparent">
                                <Border x:Name="bd2" Background="Transparent">
                                    <TextBlock Style="{DynamicResource metroWindowTitleTextStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="tb"
                                        FontFamily="Segoe Fluent Icons" FontSize="10" FontWeight="UltraLight">
                                    <ContentPresenter />
                                    </TextBlock>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False">
                                    <Setter TargetName="tb" Property="Style" Value="{DynamicResource metroWindowInactiveTitleTextStyle}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                    <Setter TargetName="bd" Property="Background" Value="#11000000" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DoIntegrateMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True" />
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bd" Property="Background" Value="{DynamicResource metroWindowBorderBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DoIntegrateMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False" />
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bd" Property="Background" Value="{DynamicResource metroWindowBorderBrush}" />
                                    <Setter TargetName="bd2" Property="Background" Value="#33000000" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="metroWindowCloseButtonStyle" TargetType="Button">
                <Setter Property="FontFamily" Value="Marlett" />
                <Setter Property="Width" Value="35" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="bd" Background="Transparent">
                                <TextBlock Style="{DynamicResource metroWindowTitleTextStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="tb"
                                    FontFamily="Segoe Fluent Icons" FontSize="10" FontWeight="UltraLight">
                            <ContentPresenter />
                                </TextBlock>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False">
                                    <Setter TargetName="tb" Property="Style" Value="{DynamicResource metroWindowInactiveTitleTextStyle}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                    <Setter TargetName="bd" Property="Background" Value="#77FF0000" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                    <Setter TargetName="bd" Property="Background" Value="Red" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="PART_Grid" UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,2,-10,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="5" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" 
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#22000000" Duration="0:0:0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" 
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="PathLeft" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                                <ColorAnimation Storyboard.TargetName="PathRight" 
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" 
                                                            To="#eeeeee" Duration="0:0:0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Path Grid.Column="0" x:Name="PathLeft" Data="M 5,27 C 5,28 4,32 0,32 L 5,32" Fill="Transparent" Stroke="Transparent" Width="5" Height="32" />
                                <Border Grid.Column="1" Grid.ColumnSpan="2" x:Name="Border" Background="Transparent" Margin="0,0,0,0" BorderThickness="0" CornerRadius="8,8,0,0">
                                </Border>
                                <ContentPresenter Grid.Column="1" x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                              ContentSource="Header" Margin="6" RecognizesAccessKey="True" />
                                <controls:TabItemCloseButton Grid.Column="2" Margin="0,0,5,0">x</controls:TabItemCloseButton>
                                <Path Grid.Column="3" x:Name="PathRight" Data="M 0,27 C 0,28 1,32 5,32 L 0,32" Fill="Transparent" Stroke="Transparent" Width="5" Height="32" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="100" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="controls:TabItemCloseButton">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width"  Value="24"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:TabItemCloseButton">
                            <Border x:Name="border" Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                                <TextBlock FontFamily="Wingdings 2" FontSize="14" Margin="0,0,0,0" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path Data="M0.5,0.5 L8.5,8.5 M8.5,0.5 L0.5,8.5" Stroke="Black" StrokeThickness="1"
                                    Width="8.9" Height="8.9" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                                </TextBlock>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#22000000"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#44000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
